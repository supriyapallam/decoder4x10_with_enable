//Design Code
module dec4x10(output reg [9:0]out,input en,input [3:0]in);
  always@*
    begin
      if(en==1'b1)
        begin
          if(in==4'b0000)
        begin
          out=10'b0000000001;
        end
      else if(in==4'b0001)
        begin
          out=10'b0000000010;
        end
      else if(in==4'b0010)
        begin
          out=10'b0000000100;
        end
      else if(in==4'b0011)
        begin
          out=10'b0000001000;
        end
      else if(in==4'b0100)
        begin
          out=10'b0000010000;
        end
      else if(in==4'b0101)
        begin
          out=10'b0000100000;
        end
      else if(in==4'b0110)
        begin
          out=10'b0001000000;
        end
      else if(in==4'b0111)
        begin
          out=10'b0010000000;
        end
      else if(in==4'b1000)
        begin
          out=10'b0100000000;
        end
      else if(in==4'b1001)
        begin
          out=10'b1000000000;
        end
      else
        begin
          out=10'b0000000000;
        end
    end
      else
        begin
          out=10'b0000000000;
        end
    end
endmodule
        
//Test Bench Code
module test();
  wire [9:0]out;
  reg en;
  reg [3:0]in;
  dec4x10 dut(out,en,in);
  integer i;
  initial
    begin
      for(i=0;i<32;i=i+1)
        begin
          {en,in}=i;
          #10;
            $display("en=%b,in=%b,out=%b",en,in,out);
        end
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
endmodule

